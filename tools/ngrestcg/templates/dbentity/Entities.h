// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest
// DO NOT EDIT. ANY CHANGES WILL BE LOST

#ifndef $(interface.nsName.!trimleft/:/.!toupper.!replace/::/_/)ENTITIES_H
#define $(interface.nsName.!trimleft/:/.!toupper.!replace/::/_/)ENTITIES_H

#include <string>
#include <bitset>
#include <ostream>

##var lastNs
##var lastNsEnd
\
#include <ngrest/db/Entity.h>
#include "$(interface.filePath)$(interface.fileName)"
\
\

##foreach $(.structs)
##ifeq($(struct.isExtern),false)
##include <common/nsopt.cpp>
class $(struct.name)Entity: public ::ngrest::Entity
{
public:
    const std::string& getName() const override;
    const std::string& getTableName() const override;
    const std::list<std::string>& getFieldsNames() const override;
    const std::string& getFieldsNamesStr() const override;
    const std::string& getFieldsArgs() const override;
    const std::list< ::ngrest::Field>& getFields() const override;
};

##endif
##endfor

$($lastNsEnd)

namespace ngrest {

class Query;

##foreach $(.structs)
##ifeq($(struct.isExtern),false)
template <>
const Entity& getEntityByDataType< $(struct.nsName) >();

template <>
constexpr unsigned long getEntityFieldsCount< $(struct.nsName) >()
{
##var fieldsCount 0
##foreach $(struct.fields)
##var fieldsCount $($fieldsCount.!inc)
##endfor
    return $($fieldsCount);
}

void bindDataToQuery(Query& query, const $(struct.nsName)& data);
void bindDataToQuery(Query& query, const $(struct.nsName)& data, const std::bitset<$($fieldsCount)>& includedFields);
void readDataFromQuery(Query& query, $(struct.nsName)& data);
void readDataFromQuery(Query& query, $(struct.nsName)& data, const std::bitset<$($fieldsCount)>& includedFields);


##endif
##endfor
} // namespace ngrest


// debug operator helpers
##foreach $(.structs)
##ifeq($(struct.isExtern),false)
std::ostream& operator<<(std::ostream& out, const $(struct.nsName)& data);
##endif
##endfor

#endif // $(interface.nsName.!trimleft/:/.!toupper.!replace/::/_/)ENTITIES_H

